var user = require('user');
var log = require('log')(module);

var WebSocketServer = require('ws').Server;

var users = new user.Users();

module.exports = function(server){

	var wss = new WebSocketServer({
		port: 8001,
		server: server
	});

	wss.on('connection', function(ws){

		var id = users.createId();

		log.info('Пользователь зашел ' + id);

		users.add(id, new user.User(id, ws, 50, 50, 10));

		users.broadcastUser(function(){

			var data = {
				a: 'cu',
				i: this.id,
				x: this.x,
				y: this.y,
				r: this.radius
			};

			return JSON.stringify(data);

		}, id);

		users.updateBroadcast(function(){

			if (this.checkData() === false){

				this.updateData(function(){

					users.broadcast(JSON.stringify({
						a: 'cu',
						i: this.id,
						x: this.x,
						y: this.y,
						r: this.radius
					}, this.id, true));

				});

			}

		}, 1000 / 24);

		ws.on('message', function(data){

			if (typeof data === 'string'){

				var code;

				try {

					data = JSON.parse(data);

					if ('i' in data){ // Тту приходит код нажатой кнопки на клиенте 
						code = data.i;

						users.control(id, code, function(){

							/*
							users.broadcast(JSON.stringify({
								i: id,
								x: this.x,
								y: this.y,
								r: this.radius
							}), id, true);
							*/

						});

					}

				} catch(error){}

			}

		});

		ws.on('close', function(){
			
			log.info('Пользователь вышел ' + id);

			users.broadcast(JSON.stringify({
				a: 'r',
				i: id
			}), id, false);

			users.remove(id);

		});
	});

};